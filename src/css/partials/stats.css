/* DaisyUI stats component adapted */

.stats {
    display: inline-grid;

    :where(&) {
        grid-auto-flow: column;
    }

    :where(&) {
        :where(& > :not(:last-child)) {
            --tw-divide-x-reverse: 0;
            border-inline-style: var(--tw-border-style);
            border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
            border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
        }

        :where(& > :not(:last-child)) {
            --tw-divide-y-reverse: 0;
            border-bottom-style: var(--tw-border-style);
            border-top-style: var(--tw-border-style);
            border-top-width: calc(0px * var(--tw-divide-y-reverse));
            border-bottom-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
        }

        overflow-x: auto;
    }

    :is([dir='rtl'] & > :not([hidden]) ~ :not([hidden])) {
        --tw-divide-x-reverse: 1;
    }
}

.stat {
    display: inline-grid;
    width: 100%;
    grid-template-columns: repeat(1, 1fr);

    .stat-figure {
        grid-column-start: 2;
        grid-row: span 3 / span 3;
        grid-row-start: 1;
        place-self: center;
        justify-self: flex-end;
    }

    .stat-title {
        grid-column-start: 1;
        white-space: nowrap;
    }

    .stat-value {
        grid-column-start: 1;
        white-space: nowrap;
    }

    .stat-desc {
        grid-column-start: 1;
        white-space: nowrap;
    }

    .stat-actions {
        grid-column-start: 1;
        white-space: nowrap;
    }

    column-gap: calc(var(--spacing) * 4);
    padding-inline: calc(var(--spacing) * 6);
    padding-block: calc(var(--spacing) * 4);

    .stat-title {
        color: light-dark(var(--color-surface-700), var(--color-surface-300));
    }

    .stat-value {
        font-size: calc(2.25rem/* 36px */ * var(--text-scaling)) /* 2.25rem = 36px */;
        line-height: var(--tw-leading, calc(calc(2.5 / 2.25) var(--text-scaling)));
        --tw-font-weight: var(--font-weight-extrabold);
        font-weight: var(--font-weight-extrabold);
    }

    .stat-desc {
        color: light-dark(var(--color-surface-700) , var(--color-surface-300));
        font-size: calc(0.75rem * var(--text-scaling));
        line-height: var(--tw-leading, calc(calc(1 / 0.75)  * var(--text-scaling)));
    }

    .stat-actions {
        margin-top: calc(var(--spacing) * 4)
    }
}

.stats-horizontal {
    grid-auto-flow: column;
    :where(& > :not(:last-child)) {
        --tw-divide-x-reverse: 0;
        border-inline-style: var(--tw-border-style);
        border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
        border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
        :where(& > :not(:last-child)) {
            --tw-divide-y-reverse: 0;
            border-bottom-style: var(--tw-border-style);
            border-top-style: var(--tw-border-style);
            border-top-width: calc(0px * var(--tw-divide-y-reverse));
            border-bottom-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
        }
        overflow-x: auto;
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
            --tw-divide-x-reverse: 1;
        }
    }
}

.stats-vertical {
    grid-auto-flow: row;
    :where(& > :not(:last-child)) {
        --tw-divide-x-reverse: 0;
        border-inline-style: var(--tw-border-style);
        border-inline-start-width: calc(0px * var(--tw-divide-x-reverse));
        border-inline-end-width: calc(0px * calc(1 - var(--tw-divide-x-reverse)));
    }
    :where(& > :not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(1px * var(--tw-divide-y-reverse));
        border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
    overflow-y: auto;
}