/*!
 * tailwindcss v4.1.16 | MIT License | https://tailwindcss.com
 *
 * remove stuff bit by bit
 */
@layer properties {
    @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
        *, :before, :after, ::backdrop {
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-scale-x: 1;
            --tw-scale-y: 1;
            --tw-scale-z: 1;
            --tw-rotate-x: initial;
            --tw-rotate-y: initial;
            --tw-rotate-z: initial;
            --tw-skew-x: initial;
            --tw-skew-y: initial;
            --tw-space-y-reverse: 0;
            --tw-space-x-reverse: 0;
            --tw-border-style: solid;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-outline-style: solid;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-ease: initial;
            --tw-duration: initial;
            --tw-animation-delay: 0s;
            --tw-animation-direction: normal;
            --tw-animation-duration: initial;
            --tw-animation-fill-mode: none;
            --tw-animation-iteration-count: 1;
            --tw-enter-blur: 0;
            --tw-enter-opacity: 1;
            --tw-enter-rotate: 0;
            --tw-enter-scale: 1;
            --tw-enter-translate-x: 0;
            --tw-enter-translate-y: 0;
            --tw-exit-blur: 0;
            --tw-exit-opacity: 1;
            --tw-exit-rotate: 0;
            --tw-exit-scale: 1;
            --tw-exit-translate-x: 0;
            --tw-exit-translate-y: 0;
        }
    }
}

@layer theme {
    :root, :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
        --color-red-500: oklch(63.7% .237 25.331);
        --color-orange-500: oklch(70.5% .213 47.604);
        --color-yellow-500: oklch(79.5% .184 86.047);
        --color-teal-500: oklch(70.4% .14 182.503);
        --color-gray-400: oklch(70.7% .022 261.325);
        --color-gray-500: oklch(55.1% .027 264.364);
        --color-gray-600: oklch(44.6% .03 256.802);
        --color-black: #000;
        --color-white: #fff;
        --spacing: .25rem;
        --container-md: 28rem;
        --text-xs: .75rem;
        --text-xs--line-height: calc(1 / .75);
        --text-sm: .875rem;
        --text-sm--line-height: calc(1.25 / .875);
        --text-base: 1rem;
        --text-base--line-height: calc(1.5 / 1);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75 / 1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: calc(2.25 / 1.875);
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5 / 2.25);
        --text-5xl: 3rem;
        --text-5xl--line-height: 1;
        --text-6xl: 3.75rem;
        --text-6xl--line-height: 1;
        --text-8xl: 6rem;
        --text-8xl--line-height: 1;
        --font-weight-extralight: 200;
        --font-weight-light: 300;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --font-weight-extrabold: 800;
        --radius-sm: .25rem;
        --radius-lg: .5rem;
        --radius-xl: .75rem;
        --ease-in-out: cubic-bezier(.4, 0, .2, 1);
        --animate-spin: spin 1s linear infinite;
        --blur-sm: 8px;
        --default-transition-duration: .15s;
        --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono);
    }
}

@layer base {
    *, :after, :before, ::backdrop {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }

    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }

    html, :host {
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }

    h1, h2, h3, h4, h5, h6 {
        font-size: inherit;
        font-weight: inherit;
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        -webkit-text-decoration: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }

    b, strong {
        font-weight: bolder;
    }

    code, kbd, samp, pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em;
    }

    small {
        font-size: 80%;
    }

    sub, sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative;
    }

    sub {
        bottom: -.25em;
    }

    sup {
        top: -.5em;
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }

    :-moz-focusring {
        outline: auto;
    }

    progress {
        vertical-align: baseline;
    }

    summary {
        display: list-item;
    }

    ol, ul, menu {
        list-style: none;
    }

    img, svg, video, canvas, audio, iframe, embed, object {
        vertical-align: middle;
        display: block;
    }

    img, video {
        max-width: 100%;
        height: auto;
    }

    button, input, select, optgroup, textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }

    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }

    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }

    ::file-selector-button {
        margin-inline-end: 4px;
    }

    ::placeholder {
        opacity: 1;
    }

    @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
        ::placeholder {
            color: currentColor;
        }

        @supports (color: color-mix(in lab, red, red)) {
            ::placeholder {
                color: color-mix(in oklab, currentcolor 50%, transparent);
            }
        }
    }

    textarea {
        resize: vertical;
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }

    ::-webkit-datetime-edit {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-year-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-month-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-day-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-hour-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-minute-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-second-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-millisecond-field {
        padding-block: 0;
    }

    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }

    ::-webkit-calendar-picker-indicator {
        line-height: 1;
    }

    :-moz-ui-invalid {
        box-shadow: none;
    }

    button, input:where([type="button"], [type="reset"], [type="submit"]) {
        appearance: button;
    }

    ::file-selector-button {
        appearance: button;
    }

    ::-webkit-inner-spin-button {
        height: auto;
    }

    ::-webkit-outer-spin-button {
        height: auto;
    }

    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }

    [type="text"], input:where(:not([type])), [type="email"], [type="url"], [type="password"], [type="number"], [type="date"], [type="datetime-local"], [type="month"], [type="search"], [type="tel"], [type="time"], [type="week"], [multiple], textarea, select {
        appearance: none;
        --tw-shadow: 0 0 #0000;
        background-color: #fff;
        border-width: 1px;
        border-color: oklch(55.1% .027 264.364);
        border-radius: 0;
        padding: .5rem .75rem;
        font-size: 1rem;
        line-height: 1.5rem;
    }

    :is([type="text"], input:where(:not([type])), [type="email"], [type="url"], [type="password"], [type="number"], [type="date"], [type="datetime-local"], [type="month"], [type="search"], [type="tel"], [type="time"], [type="week"], [multiple], textarea, select):focus {
        outline-offset: 2px;
        --tw-ring-inset: var(--tw-empty,);
        --tw-ring-offset-width: 0px;
        --tw-ring-offset-color: #fff;
        --tw-ring-color: oklch(54.6% .245 262.881);
        --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
        box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        border-color: oklch(54.6% .245 262.881);
        outline: 2px solid #0000;
    }

    input::placeholder, textarea::placeholder {
        color: oklch(55.1% .027 264.364);
        opacity: 1;
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }

    ::-webkit-date-and-time-value {
        min-height: 1.5em;
    }

    ::-webkit-date-and-time-value {
        text-align: inherit;
    }

    ::-webkit-datetime-edit {
        display: inline-flex;
    }

    ::-webkit-datetime-edit {
        padding-top: 0;
        padding-bottom: 0;
    }

    ::-webkit-datetime-edit-year-field {
        padding-top: 0;
        padding-bottom: 0;
    }

    ::-webkit-datetime-edit-month-field {
        padding-top: 0;
        padding-bottom: 0;
    }

    ::-webkit-datetime-edit-day-field {
        padding-top: 0;
        padding-bottom: 0;
    }

    ::-webkit-datetime-edit-hour-field {
        padding-top: 0;
        padding-bottom: 0;
    }

    ::-webkit-datetime-edit-minute-field {
        padding-top: 0;
        padding-bottom: 0;
    }

    ::-webkit-datetime-edit-second-field {
        padding-top: 0;
        padding-bottom: 0;
    }

    ::-webkit-datetime-edit-millisecond-field {
        padding-top: 0;
        padding-bottom: 0;
    }

    ::-webkit-datetime-edit-meridiem-field {
        padding-top: 0;
        padding-bottom: 0;
    }

    select {
        print-color-adjust: exact;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='oklch(55.1%25 0.027 264.364)' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
        background-position: right .5rem center;
        background-repeat: no-repeat;
        background-size: 1.5em 1.5em;
        padding-right: 2.5rem;
    }

    [multiple], [size]:where(select:not([size="1"])) {
        background-image: initial;
        background-position: initial;
        background-repeat: unset;
        background-size: initial;
        print-color-adjust: unset;
        padding-right: .75rem;
    }

    [type="checkbox"], [type="radio"] {
        appearance: none;
        print-color-adjust: exact;
        vertical-align: middle;
        -webkit-user-select: none;
        user-select: none;
        color: oklch(54.6% .245 262.881);
        --tw-shadow: 0 0 #0000;
        background-color: #fff;
        background-origin: border-box;
        border-width: 1px;
        border-color: oklch(55.1% .027 264.364);
        flex-shrink: 0;
        width: 1rem;
        height: 1rem;
        padding: 0;
        display: inline-block;
    }

    [type="checkbox"] {
        border-radius: 0;
    }

    [type="radio"] {
        border-radius: 100%;
    }

    [type="checkbox"]:focus, [type="radio"]:focus {
        outline-offset: 2px;
        --tw-ring-inset: var(--tw-empty,);
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-color: #fff;
        --tw-ring-color: oklch(54.6% .245 262.881);
        --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
        box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        outline: 2px solid #0000;
    }

    [type="checkbox"]:checked, [type="radio"]:checked {
        background-color: currentColor;
        background-position: center;
        background-repeat: no-repeat;
        background-size: 100% 100%;
        border-color: #0000;
    }

    [type="checkbox"]:checked {
        background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
    }

    @media (forced-colors: active) {
        [type="checkbox"]:checked {
            appearance: auto;
        }
    }

    [type="radio"]:checked {
        background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
    }

    @media (forced-colors: active) {
        [type="radio"]:checked {
            appearance: auto;
        }
    }

    [type="checkbox"]:checked:hover, [type="checkbox"]:checked:focus, [type="radio"]:checked:hover, [type="radio"]:checked:focus {
        background-color: currentColor;
        border-color: #0000;
    }

    [type="checkbox"]:indeterminate {
        background-color: currentColor;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
        background-position: center;
        background-repeat: no-repeat;
        background-size: 100% 100%;
        border-color: #0000;
    }

    @media (forced-colors: active) {
        [type="checkbox"]:indeterminate {
            appearance: auto;
        }
    }

    [type="checkbox"]:indeterminate:hover, [type="checkbox"]:indeterminate:focus {
        background-color: currentColor;
        border-color: #0000;
    }

    [type="file"] {
        background: unset;
        border-color: inherit;
        font-size: unset;
        line-height: inherit;
        border-width: 0;
        border-radius: 0;
        padding: 0;
    }

    [type="file"]:focus {
        outline: 1px solid buttontext;
        outline: 1px auto -webkit-focus-ring-color;
    }
}

@layer components;

@layer utilities {
    .\@container {
        container-type: inline-size;
    }

    .visible {
        visibility: visible;
    }

    .sr-only {
        clip-path: inset(50%);
        white-space: nowrap;
        border-width: 0;
        width: 1px;
        height: 1px;
        margin: -1px;
        padding: 0;
        position: absolute;
        overflow: hidden;
    }

    .absolute {
        position: absolute;
    }

    .fixed {
        position: fixed;
    }

    .relative {
        position: relative;
    }

    .static {
        position: static;
    }

    .sticky {
        position: sticky;
    }

    .inset-0 {
        inset: calc(var(--spacing) * 0);
    }

    .inset-x-0 {
        inset-inline: calc(var(--spacing) * 0);
    }

    .inset-y-0 {
        inset-block: calc(var(--spacing) * 0);
    }

    .top-0 {
        top: calc(var(--spacing) * 0);
    }

    .top-\[50\%\] {
        top: 50%;
    }

    .right-0 {
        right: calc(var(--spacing) * 0);
    }

    .bottom-0 {
        bottom: calc(var(--spacing) * 0);
    }

    .left-0 {
        left: calc(var(--spacing) * 0);
    }

    .left-\[50\%\] {
        left: 50%;
    }

    .z-2 {
        z-index: 2;
    }

    .z-10 {
        z-index: 10;
    }

    .z-15 {
        z-index: 15;
    }

    .z-50 {
        z-index: 50;
    }

    .col-span-1 {
        grid-column: span 1 / span 1;
    }

    .col-span-2 {
        grid-column: span 2 / span 2;
    }

    .col-span-3 {
        grid-column: span 3 / span 3;
    }

    .col-span-4 {
        grid-column: span 4 / span 4;
    }

    .col-span-6 {
        grid-column: span 6 / span 6;
    }

    .container {
        width: 100%;
    }

    @media (min-width: 40rem) {
        .container {
            max-width: 40rem;
        }
    }

    @media (min-width: 48rem) {
        .container {
            max-width: 48rem;
        }
    }

    @media (min-width: 64rem) {
        .container {
            max-width: 64rem;
        }
    }

    @media (min-width: 80rem) {
        .container {
            max-width: 80rem;
        }
    }

    @media (min-width: 96rem) {
        .container {
            max-width: 96rem;
        }
    }

    .m-0\.5 {
        margin: calc(var(--spacing) * .5);
    }

    .m-1 {
        margin: calc(var(--spacing) * 1);
    }

    .m-2 {
        margin: calc(var(--spacing) * 2);
    }

    .mx-1 {
        margin-inline: calc(var(--spacing) * 1);
    }

    .mx-2 {
        margin-inline: calc(var(--spacing) * 2);
    }

    .mx-3 {
        margin-inline: calc(var(--spacing) * 3);
    }

    .mx-4 {
        margin-inline: calc(var(--spacing) * 4);
    }

    .mx-auto {
        margin-inline: auto;
    }

    .my-1 {
        margin-block: calc(var(--spacing) * 1);
    }

    .my-2 {
        margin-block: calc(var(--spacing) * 2);
    }

    .my-2\! {
        margin-block: calc(var(--spacing) * 2) !important;
    }

    .my-3 {
        margin-block: calc(var(--spacing) * 3);
    }

    .my-3\! {
        margin-block: calc(var(--spacing) * 3) !important;
    }

    .my-4 {
        margin-block: calc(var(--spacing) * 4);
    }

    .my-4\! {
        margin-block: calc(var(--spacing) * 4) !important;
    }

    .my-5 {
        margin-block: calc(var(--spacing) * 5);
    }

    .my-5\! {
        margin-block: calc(var(--spacing) * 5) !important;
    }

    .my-6 {
        margin-block: calc(var(--spacing) * 6);
    }

    .my-6\! {
        margin-block: calc(var(--spacing) * 6) !important;
    }

    .my-8 {
        margin-block: calc(var(--spacing) * 8);
    }

    .my-8\! {
        margin-block: calc(var(--spacing) * 8) !important;
    }

    .my-10 {
        margin-block: calc(var(--spacing) * 10);
    }

    .my-10\! {
        margin-block: calc(var(--spacing) * 10) !important;
    }

    .ms-1 {
        margin-inline-start: calc(var(--spacing) * 1);
    }

    .ms-2 {
        margin-inline-start: calc(var(--spacing) * 2);
    }

    .ms-3 {
        margin-inline-start: calc(var(--spacing) * 3);
    }

    .me-1 {
        margin-inline-end: calc(var(--spacing) * 1);
    }

    .mt-1 {
        margin-top: calc(var(--spacing) * 1);
    }

    .mt-2 {
        margin-top: calc(var(--spacing) * 2);
    }

    .mt-3 {
        margin-top: calc(var(--spacing) * 3);
    }

    .mt-3\! {
        margin-top: calc(var(--spacing) * 3) !important;
    }

    .mt-4 {
        margin-top: calc(var(--spacing) * 4);
    }

    .mt-4\! {
        margin-top: calc(var(--spacing) * 4) !important;
    }

    .mt-5 {
        margin-top: calc(var(--spacing) * 5);
    }

    .mt-5\! {
        margin-top: calc(var(--spacing) * 5) !important;
    }

    .mt-6 {
        margin-top: calc(var(--spacing) * 6);
    }

    .mt-6\! {
        margin-top: calc(var(--spacing) * 6) !important;
    }

    .mt-8\! {
        margin-top: calc(var(--spacing) * 8) !important;
    }

    .mt-10 {
        margin-top: calc(var(--spacing) * 10);
    }

    .mt-10\! {
        margin-top: calc(var(--spacing) * 10) !important;
    }

    .mr-2 {
        margin-right: calc(var(--spacing) * 2);
    }

    .mr-4 {
        margin-right: calc(var(--spacing) * 4);
    }

    .mr-6 {
        margin-right: calc(var(--spacing) * 6);
    }

    .mb-1 {
        margin-bottom: calc(var(--spacing) * 1);
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }

    .mb-2\! {
        margin-bottom: calc(var(--spacing) * 2) !important;
    }

    .mb-3 {
        margin-bottom: calc(var(--spacing) * 3);
    }

    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }

    .mb-4\! {
        margin-bottom: calc(var(--spacing) * 4) !important;
    }

    .mb-5 {
        margin-bottom: calc(var(--spacing) * 5);
    }

    .mb-6 {
        margin-bottom: calc(var(--spacing) * 6);
    }

    .mb-6\! {
        margin-bottom: calc(var(--spacing) * 6) !important;
    }

    .mb-8 {
        margin-bottom: calc(var(--spacing) * 8);
    }

    .mb-8\! {
        margin-bottom: calc(var(--spacing) * 8) !important;
    }

    .mb-10\! {
        margin-bottom: calc(var(--spacing) * 10) !important;
    }

    .ml-2 {
        margin-left: calc(var(--spacing) * 2);
    }

    .line-clamp-5 {
        -webkit-line-clamp: 5;
        -webkit-box-orient: vertical;
        display: -webkit-box;
        overflow: hidden;
    }

    .block {
        display: block;
    }

    .contents {
        display: contents;
    }

    .flex {
        display: flex;
    }

    .grid {
        display: grid;
    }

    .hidden {
        display: none;
    }

    .hidden\! {
        display: none !important;
    }

    .inline {
        display: inline;
    }

    .inline-block {
        display: inline-block;
    }

    .table {
        display: table;
    }

    .aspect-square {
        aspect-ratio: 1;
    }

    .h-4 {
        height: calc(var(--spacing) * 4);
    }

    .h-5 {
        height: calc(var(--spacing) * 5);
    }

    .h-10 {
        height: calc(var(--spacing) * 10);
    }

    .h-12 {
        height: calc(var(--spacing) * 12);
    }

    .h-16 {
        height: calc(var(--spacing) * 16);
    }

    .h-\[20em\] {
        height: 20em;
    }

    .h-auto {
        height: auto;
    }

    .h-full {
        height: 100%;
    }

    .h-screen {
        height: 100vh;
    }

    .max-h-20 {
        max-height: calc(var(--spacing) * 20);
    }

    .max-h-72 {
        max-height: calc(var(--spacing) * 72);
    }

    .min-h-14 {
        min-height: calc(var(--spacing) * 14);
    }

    .w-4 {
        width: calc(var(--spacing) * 4);
    }

    .w-5 {
        width: calc(var(--spacing) * 5);
    }

    .w-6 {
        width: calc(var(--spacing) * 6);
    }

    .w-10 {
        width: calc(var(--spacing) * 10);
    }

    .w-12 {
        width: calc(var(--spacing) * 12);
    }

    .w-14 {
        width: calc(var(--spacing) * 14);
    }

    .w-16 {
        width: calc(var(--spacing) * 16);
    }

    .w-20 {
        width: calc(var(--spacing) * 20);
    }

    .w-24 {
        width: calc(var(--spacing) * 24);
    }

    .w-36 {
        width: calc(var(--spacing) * 36);
    }

    .w-64 {
        width: calc(var(--spacing) * 64);
    }

    .w-\[70\%\]\! {
        width: 70% !important;
    }

    .w-\[100\%\], .w-full {
        width: 100%;
    }

    .w-screen {
        width: 100vw;
    }

    .max-w-14 {
        max-width: calc(var(--spacing) * 14);
    }

    .max-w-20 {
        max-width: calc(var(--spacing) * 20);
    }

    .max-w-80 {
        max-width: calc(var(--spacing) * 80);
    }

    .max-w-\[40px\] {
        max-width: 40px;
    }

    .max-w-\[65ch\] {
        max-width: 65ch;
    }

    .max-w-\[94\%\] {
        max-width: 94%;
    }

    .max-w-full {
        max-width: 100%;
    }

    .max-w-md {
        max-width: var(--container-md);
    }

    .max-w-none {
        max-width: none;
    }

    .min-w-8 {
        min-width: calc(var(--spacing) * 8);
    }

    .min-w-52 {
        min-width: calc(var(--spacing) * 52);
    }

    .flex-auto {
        flex: auto;
    }

    .shrink-0 {
        flex-shrink: 0;
    }

    .flex-grow, .grow {
        flex-grow: 1;
    }

    .grow-0 {
        flex-grow: 0;
    }

    .translate-x-\[-50\%\] {
        --tw-translate-x: -50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .translate-y-\[-50\%\] {
        --tw-translate-y: -50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }

    .scale-75 {
        --tw-scale-x: 75%;
        --tw-scale-y: 75%;
        --tw-scale-z: 75%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }

    .transform {
        transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    }

    .animate-spin {
        animation: var(--animate-spin);
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    .grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    .grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    .grid-cols-6 {
        grid-template-columns: repeat(6, minmax(0, 1fr));
    }

    .grid-cols-\[1fr_auto\] {
        grid-template-columns: 1fr auto;
    }

    .grid-cols-\[auto_1fr\] {
        grid-template-columns: auto 1fr;
    }

    .grid-cols-\[auto_1fr_auto\] {
        grid-template-columns: auto 1fr auto;
    }

    .grid-rows-5 {
        grid-template-rows: repeat(5, minmax(0, 1fr));
    }

    .grid-rows-\[auto_1fr_auto\] {
        grid-template-rows: auto 1fr auto;
    }

    .flex-col {
        flex-direction: column;
    }

    .flex-col-reverse {
        flex-direction: column-reverse;
    }

    .flex-row-reverse {
        flex-direction: row-reverse;
    }

    .flex-wrap {
        flex-wrap: wrap;
    }

    .place-items-center {
        place-items: center;
    }

    .place-items-stretch {
        place-items: stretch stretch;
    }

    .items-center {
        align-items: center;
    }

    .items-end {
        align-items: flex-end;
    }

    .items-start {
        align-items: flex-start;
    }

    .justify-around {
        justify-content: space-around;
    }

    .justify-around\! {
        justify-content: space-around !important;
    }

    .justify-between {
        justify-content: space-between;
    }

    .justify-center {
        justify-content: center;
    }

    .justify-end {
        justify-content: flex-end;
    }

    .justify-evenly {
        justify-content: space-evenly;
    }

    .justify-start {
        justify-content: flex-start;
    }

    .justify-items-center {
        justify-items: center;
    }

    .justify-items-stretch {
        justify-items: stretch;
    }

    .gap-0\! {
        gap: calc(var(--spacing) * 0) !important;
    }

    .gap-0\.5 {
        gap: calc(var(--spacing) * .5);
    }

    .gap-1 {
        gap: calc(var(--spacing) * 1);
    }

    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }

    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }

    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }

    .gap-5 {
        gap: calc(var(--spacing) * 5);
    }

    .gap-6 {
        gap: calc(var(--spacing) * 6);
    }

    .gap-8 {
        gap: calc(var(--spacing) * 8);
    }

    :where(.space-y-0\.5 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * .5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * .5) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-1 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-2 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-2\.5 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-3 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-4 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-5 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
    }

    :where(.space-y-6 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }

    .gap-x-2 {
        column-gap: calc(var(--spacing) * 2);
    }

    :where(.space-x-4 > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }

    .gap-y-2 {
        row-gap: calc(var(--spacing) * 2);
    }

    .place-self-center {
        place-self: center;
    }

    .self-center {
        align-self: center;
    }

    .self-end {
        align-self: flex-end;
    }

    .justify-self-center {
        justify-self: center;
    }

    .justify-self-end {
        justify-self: flex-end;
    }

    .justify-self-start {
        justify-self: flex-start;
    }

    .overflow-hidden {
        overflow: hidden;
    }

    .overflow-x-auto {
        overflow-x: auto;
    }

    .overflow-y-scroll {
        overflow-y: scroll;
    }

    .rounded {
        border-radius: .25rem;
    }

    .rounded-full {
        border-radius: 3.40282e38px;
    }

    .rounded-lg {
        border-radius: var(--radius-lg);
    }

    .rounded-sm {
        border-radius: var(--radius-sm);
    }

    .rounded-xl {
        border-radius: var(--radius-xl);
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }

    .border-4 {
        border-style: var(--tw-border-style);
        border-width: 4px;
    }

    .border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
    }

    .border-r {
        border-right-style: var(--tw-border-style);
        border-right-width: 1px;
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }

    .bg-black {
        background-color: var(--color-black);
    }

    .bg-gray-500 {
        background-color: var(--color-gray-500);
    }

    .bg-orange-500 {
        background-color: var(--color-orange-500);
    }

    .bg-red-500 {
        background-color: var(--color-red-500);
    }

    .bg-teal-500 {
        background-color: var(--color-teal-500);
    }

    .bg-yellow-500 {
        background-color: var(--color-yellow-500);
    }

    .fill-current {
        fill: currentColor;
    }

    .p-0 {
        padding: calc(var(--spacing) * 0);
    }

    .p-0\! {
        padding: calc(var(--spacing) * 0) !important;
    }

    .p-0\.5 {
        padding: calc(var(--spacing) * .5);
    }

    .p-1 {
        padding: calc(var(--spacing) * 1);
    }

    .p-1\! {
        padding: calc(var(--spacing) * 1) !important;
    }

    .p-1\.5 {
        padding: calc(var(--spacing) * 1.5);
    }

    .p-2 {
        padding: calc(var(--spacing) * 2);
    }

    .p-3 {
        padding: calc(var(--spacing) * 3);
    }

    .p-4 {
        padding: calc(var(--spacing) * 4);
    }

    .p-5 {
        padding: calc(var(--spacing) * 5);
    }

    .p-6 {
        padding: calc(var(--spacing) * 6);
    }

    .px-1 {
        padding-inline: calc(var(--spacing) * 1);
    }

    .px-2 {
        padding-inline: calc(var(--spacing) * 2);
    }

    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }

    .px-4 {
        padding-inline: calc(var(--spacing) * 4);
    }

    .px-6 {
        padding-inline: calc(var(--spacing) * 6);
    }

    .px-10 {
        padding-inline: calc(var(--spacing) * 10);
    }

    .py-0 {
        padding-block: calc(var(--spacing) * 0);
    }

    .py-0\.5 {
        padding-block: calc(var(--spacing) * .5);
    }

    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }

    .py-1\.5 {
        padding-block: calc(var(--spacing) * 1.5);
    }

    .py-2 {
        padding-block: calc(var(--spacing) * 2);
    }

    .py-3 {
        padding-block: calc(var(--spacing) * 3);
    }

    .py-4 {
        padding-block: calc(var(--spacing) * 4);
    }

    .pt-1 {
        padding-top: calc(var(--spacing) * 1);
    }

    .pt-2 {
        padding-top: calc(var(--spacing) * 2);
    }

    .pt-3 {
        padding-top: calc(var(--spacing) * 3);
    }

    .pt-4 {
        padding-top: calc(var(--spacing) * 4);
    }

    .pb-2 {
        padding-bottom: calc(var(--spacing) * 2);
    }

    .pb-3 {
        padding-bottom: calc(var(--spacing) * 3);
    }

    .text-center {
        text-align: center;
    }

    .text-justify {
        text-align: justify;
    }

    .align-middle {
        vertical-align: middle;
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }

    .text-4xl {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
    }

    .text-8xl {
        font-size: var(--text-8xl);
        line-height: var(--tw-leading, var(--text-8xl--line-height));
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }

    .text-sm\! {
        font-size: var(--text-sm) !important;
        line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
    }

    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }

    .leading-8 {
        --tw-leading: calc(var(--spacing) * 8);
        line-height: calc(var(--spacing) * 8);
    }

    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }

    .font-extrabold {
        --tw-font-weight: var(--font-weight-extrabold);
        font-weight: var(--font-weight-extrabold);
    }

    .font-extralight {
        --tw-font-weight: var(--font-weight-extralight);
        font-weight: var(--font-weight-extralight);
    }

    .font-light {
        --tw-font-weight: var(--font-weight-light);
        font-weight: var(--font-weight-light);
    }

    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }

    .text-nowrap {
        text-wrap: nowrap;
    }

    .text-wrap {
        text-wrap: wrap;
    }

    .hyphens-auto {
        -webkit-hyphens: auto;
        hyphens: auto;
    }

    .text-black {
        color: var(--color-black);
    }

    .text-gray-600 {
        color: var(--color-gray-600);
    }

    .text-white {
        color: var(--color-white);
    }

    .capitalize {
        text-transform: capitalize;
    }

    .lowercase {
        text-transform: lowercase;
    }

    .italic {
        font-style: italic;
    }

    .line-through {
        text-decoration-line: line-through;
    }

    .antialiased {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    .shadow {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-2xl {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-lg {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-md {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .shadow-xl {
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .ring {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }

    .outline {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
    }

    .blur {
        --tw-blur: blur(8px);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }

    .filter {
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }

    .transition {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }

    .ease-in-out {
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out);
    }

    .select-none {
        -webkit-user-select: none;
        user-select: none;
    }

    .running {
        animation-play-state: running;
    }

    .disabled\:pointer-events-none:disabled {
        pointer-events: none;
    }

    .data-\[state\=closed\]\:animate-out[data-state="closed"] {
        animation: exit var(--tw-animation-duration, var(--tw-duration, .15s)) var(--tw-ease, ease) var(--tw-animation-delay, 0s) var(--tw-animation-iteration-count, 1) var(--tw-animation-direction, normal) var(--tw-animation-fill-mode, none);
    }

    .data-\[state\=closed\]\:duration-300[data-state="closed"] {
        --tw-duration: .3s;
        transition-duration: .3s;
    }

    .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
        --tw-exit-opacity: 0;
    }

    .data-\[state\=closed\]\:slide-out-to-bottom[data-state="closed"] {
        --tw-exit-translate-y: 100%;
    }

    .data-\[state\=closed\]\:slide-out-to-left[data-state="closed"] {
        --tw-exit-translate-x: -100%;
    }

    .data-\[state\=closed\]\:slide-out-to-right[data-state="closed"] {
        --tw-exit-translate-x: 100%;
    }

    .data-\[state\=closed\]\:slide-out-to-top[data-state="closed"] {
        --tw-exit-translate-y: -100%;
    }

    .data-\[state\=open\]\:animate-in[data-state="open"] {
        animation: enter var(--tw-animation-duration, var(--tw-duration, .15s)) var(--tw-ease, ease) var(--tw-animation-delay, 0s) var(--tw-animation-iteration-count, 1) var(--tw-animation-direction, normal) var(--tw-animation-fill-mode, none);
    }

    .data-\[state\=open\]\:duration-480[data-state="open"] {
        --tw-duration: .48s;
        transition-duration: .48s;
    }

    .data-\[state\=open\]\:fade-in-0[data-state="open"] {
        --tw-enter-opacity: 0;
    }

    .data-\[state\=open\]\:slide-in-from-bottom[data-state="open"] {
        --tw-enter-translate-y: 100%;
    }

    .data-\[state\=open\]\:slide-in-from-left[data-state="open"] {
        --tw-enter-translate-x: -100%;
    }

    .data-\[state\=open\]\:slide-in-from-right[data-state="open"] {
        --tw-enter-translate-x: 100%;
    }

    .data-\[state\=open\]\:slide-in-from-top[data-state="open"] {
        --tw-enter-translate-y: -100%;
    }

    @media (min-width: 40rem) {
        .sm\:w-64 {
            width: calc(var(--spacing) * 64);
        }

        .sm\:w-\[80\%\] {
            width: 80%;
        }

        .sm\:max-w-\[640px\] {
            max-width: 640px;
        }

        .sm\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }

        .sm\:flex-row {
            flex-direction: row;
        }

        .sm\:items-center {
            align-items: center;
        }

        .sm\:justify-end {
            justify-content: flex-end;
        }

        :where(.sm\:space-x-2 > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
        }

        .sm\:pb-4 {
            padding-bottom: calc(var(--spacing) * 4);
        }

        .sm\:text-left {
            text-align: left;
        }

        .sm\:text-3xl {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading, var(--text-3xl--line-height));
        }
    }

    @media (min-width: 48rem) {
        .md\:col-span-1 {
            grid-column: span 1 / span 1;
        }

        .md\:col-span-2 {
            grid-column: span 2 / span 2;
        }

        .md\:my-4 {
            margin-block: calc(var(--spacing) * 4);
        }

        .md\:my-5 {
            margin-block: calc(var(--spacing) * 5);
        }

        .md\:mt-0 {
            margin-top: calc(var(--spacing) * 0);
        }

        .md\:mb-0 {
            margin-bottom: calc(var(--spacing) * 0);
        }

        .md\:block {
            display: block;
        }

        .md\:flex {
            display: flex;
        }

        .md\:hidden {
            display: none;
        }

        .md\:w-full {
            width: 100%;
        }

        .md\:max-w-\[60\%\] {
            max-width: 60%;
        }

        .md\:max-w-\[80\%\] {
            max-width: 80%;
        }

        .md\:grow-0 {
            flex-grow: 0;
        }

        .md\:grid-flow-col {
            grid-auto-flow: column;
        }

        .md\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }

        .md\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }

        .md\:grid-cols-\[auto_1fr\] {
            grid-template-columns: auto 1fr;
        }

        .md\:flex-row {
            flex-direction: row;
        }

        .md\:items-center {
            align-items: center;
        }

        .md\:justify-between {
            justify-content: space-between;
        }

        .md\:gap-2 {
            gap: calc(var(--spacing) * 2);
        }

        .md\:gap-3 {
            gap: calc(var(--spacing) * 3);
        }

        .md\:gap-4 {
            gap: calc(var(--spacing) * 4);
        }

        .md\:gap-8 {
            gap: calc(var(--spacing) * 8);
        }

        :where(.md\:space-y-0 > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
        }

        :where(.md\:space-x-4 > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
            margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
        }

        .md\:p-4 {
            padding: calc(var(--spacing) * 4);
        }

        .md\:px-5 {
            padding-inline: calc(var(--spacing) * 5);
        }

        .md\:text-base {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }
    }

    @media (min-width: 64rem) {
        .lg\:col-span-2 {
            grid-column: span 2 / span 2;
        }

        .lg\:my-5 {
            margin-block: calc(var(--spacing) * 5);
        }

        .lg\:me-2 {
            margin-inline-end: calc(var(--spacing) * 2);
        }

        .lg\:mt-5 {
            margin-top: calc(var(--spacing) * 5);
        }

        .lg\:mt-10 {
            margin-top: calc(var(--spacing) * 10);
        }

        .lg\:flex {
            display: flex;
        }

        .lg\:hidden {
            display: none;
        }

        .lg\:inline {
            display: inline;
        }

        .lg\:w-\[70\%\] {
            width: 70%;
        }

        .lg\:max-w-\[50\%\] {
            max-width: 50%;
        }

        .lg\:max-w-\[55\%\] {
            max-width: 55%;
        }

        .lg\:max-w-\[75\%\] {
            max-width: 75%;
        }

        .lg\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }

        .lg\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }

        .lg\:gap-2 {
            gap: calc(var(--spacing) * 2);
        }

        .lg\:gap-3 {
            gap: calc(var(--spacing) * 3);
        }

        .lg\:gap-4 {
            gap: calc(var(--spacing) * 4);
        }

        .lg\:gap-6 {
            gap: calc(var(--spacing) * 6);
        }

        .lg\:gap-8 {
            gap: calc(var(--spacing) * 8);
        }

        .lg\:gap-12 {
            gap: calc(var(--spacing) * 12);
        }

        :where(.lg\:space-y-4 > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
        }

        :where(.lg\:space-y-6 > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
        }

        .lg\:px-4 {
            padding-inline: calc(var(--spacing) * 4);
        }

        .lg\:pb-0 {
            padding-bottom: calc(var(--spacing) * 0);
        }

        .lg\:pb-5 {
            padding-bottom: calc(var(--spacing) * 5);
        }

        .lg\:text-4xl {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading, var(--text-4xl--line-height));
        }

        .lg\:text-base {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }
    }

    @media (min-width: 80rem) {
        .xl\:mt-9\! {
            margin-top: calc(var(--spacing) * 9) !important;
        }

        .xl\:w-24 {
            width: calc(var(--spacing) * 24);
        }

        .xl\:w-\[50\%\] {
            width: 50%;
        }

        .xl\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }

        .xl\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }

        .xl\:justify-start {
            justify-content: flex-start;
        }

        .xl\:gap-4 {
            gap: calc(var(--spacing) * 4);
        }

        .xl\:gap-8 {
            gap: calc(var(--spacing) * 8);
        }

        .xl\:gap-12 {
            gap: calc(var(--spacing) * 12);
        }

        :where(.xl\:space-y-7 > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 7) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 7) * calc(1 - var(--tw-space-y-reverse)));
        }

        .xl\:text-5xl {
            font-size: var(--text-5xl);
            line-height: var(--tw-leading, var(--text-5xl--line-height));
        }
    }

    @media (min-width: 96rem) {
        .\32 xl\:max-w-\[70\%\] {
            max-width: 70%;
        }

        .\32 xl\:gap-5 {
            gap: calc(var(--spacing) * 5);
        }

        .\32 xl\:gap-10 {
            gap: calc(var(--spacing) * 10);
        }

        .\32 xl\:text-6xl {
            font-size: var(--text-6xl);
            line-height: var(--tw-leading, var(--text-6xl--line-height));
        }
    }

    @container (min-width: 32rem) {
        .\@lg\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
    }

    :where(.rtl\:space-x-reverse:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) > :not(:last-child)) {
        --tw-space-x-reverse: 1;
    }

    @media (prefers-color-scheme: dark) {
        .dark\:border {
            border-style: var(--tw-border-style);
            border-width: 1px;
        }

        .dark\:border-2 {
            border-style: var(--tw-border-style);
            border-width: 2px;
        }

        .dark\:border-white {
            border-color: var(--color-white);
        }

        .dark\:text-gray-400 {
            color: var(--color-gray-400);
        }

        .dark\:text-white {
            color: var(--color-white);
        }
    }
}

@property --tw-animation-delay {
    syntax: "*";
    inherits: false;
    initial-value: 0s;
}

@property --tw-animation-direction {
    syntax: "*";
    inherits: false;
    initial-value: normal;
}

@property --tw-animation-duration {
    syntax: "*";
    inherits: false
}

@property --tw-animation-fill-mode {
    syntax: "*";
    inherits: false;
    initial-value: none;
}

@property --tw-animation-iteration-count {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-enter-blur {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-enter-opacity {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-enter-rotate {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-enter-scale {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-enter-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-enter-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-exit-blur {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-exit-opacity {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-exit-rotate {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-exit-scale {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-exit-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-exit-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-space-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-leading {
    syntax: "*";
    inherits: false
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0;
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}

@property --tw-blur {
    syntax: "*";
    inherits: false
}

@property --tw-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-invert {
    syntax: "*";
    inherits: false
}

@property --tw-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}

@property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false
}

@property --tw-ease {
    syntax: "*";
    inherits: false
}

@property --tw-duration {
    syntax: "*";
    inherits: false
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

@keyframes enter {
    from {
        opacity: var(--tw-enter-opacity, 1);
        transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
        filter: blur(var(--tw-enter-blur, 0));
    }
}

@keyframes exit {
    to {
        opacity: var(--tw-exit-opacity, 1);
        transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
        filter: blur(var(--tw-exit-blur, 0));
    }
}
