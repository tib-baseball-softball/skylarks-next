name: Deploy to Production Server

on:
  workflow_dispatch:
  #push:
    #paths-ignore:
    #  - '**/README.md'
    #  - 'docs/**'
    #branches:
    #  - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: deploy

    strategy:
      matrix:
        node-version: [20.x]
    env:
      PUBLIC_BACKEND_URL: ${{ vars.PUBLIC_BACKEND_URL }}
      PUBLIC_CLUB_ID: ${{ vars.PUBLIC_CLUB_ID }}
      PUBLIC_TEAM_NAME: ${{ vars.PUBLIC_TEAM_NAME }}
      PUBLIC_POCKETBASE_URL: ${{ vars.PUBLIC_POCKETBASE_URL }}
      PUBLIC_AUTH_FUNCS_ENABLED: ${{ vars.PUBLIC_AUTH_FUNCS_ENABLED }}
      BSM_API_KEY: ${{ secrets.BSM_API_KEY }}
      SKYLARKS_API_AUTH_HEADER: ${{ secrets.SKYLARKS_API_AUTH_HEADER }}

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build
        working-directory: ${{ github.workspace }}

      - name: install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: copy build files over
        run: |
          rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ${{ github.workspace }}/build/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ vars.WORK_DIR }}/build/
          rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ${{ github.workspace }}/node_modules/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ vars.WORK_DIR }}/node_modules/
          rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ${{ github.workspace }}/package.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ vars.WORK_DIR }}/package.json
          rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" ${{ github.workspace }}/package-lock.json ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ vars.WORK_DIR }}/package-lock.json