import {expect, test} from '@playwright/test';
import * as process from "node:process";

test('check all diamond planner routes', async ({ page }) => {
  await page.goto('/');
  await page.getByRole('link', { name: 'Login' }).click();
  await page.getByRole('textbox', { name: 'Your email' }).click();
  await page.getByRole('textbox', { name: 'Your email' }).fill(process.env.TEST_USER_NAME ?? "");
  await page.getByRole('textbox', { name: 'Your password' }).click();
  await page.getByRole('textbox', { name: 'Your password' }).fill(process.env.TEST_USER_PASSWORD ?? "");
  await page.getByRole('button', { name: 'Login to your account' }).click();
  await page.getByRole('link', { name: 'Personal Stats' }).click();
  await page.getByRole('heading', { name: 'All Teams' }).click();
  await page.locator('section').filter({ hasText: 'Attendance Stats' }).locator('footer').count();
  await page.getByRole('link', { name: 'Player Profile' }).click();
  await page.getByRole('button', { name: 'Edit Player Data' }).click();
  await page.getByRole('button', { name: 'Close' }).click();
  await page.getByRole('link', { name: 'Fangzauner Schneebrunzer (ÖÄ' }).click();
  await page.getByRole('link', { name: 'Bogus Team (ÖÄZZ)' }).click();
  await page.getByRole('link', { name: 'Admin Dashboard' }).click();
  await expect(page.getByRole('heading', { name: 'Stats Admin Dashboard' })).toBeVisible();
  await page.getByRole('link', { name: 'Dashboard', exact: true }).click();
  await expect(page.getByRole('heading', { name: 'User Data' })).toBeVisible();
  await page.getByRole('link', { name: 'Bogus Team (ÖÄZZ)' }).click();
  await expect(page.getByRole('main')).toContainText('Dies ist ein Test-Team. Wenn es dir im realen Betrieb angezeigt wird, sag David Bescheid und schicke einen Screenshot mit.');
  await expect(page.getByText('Bogus Team Name 0 BSM-Liga (f')).toBeVisible();
  await page.locator('[data-testid="segment-item"]').filter({ hasText: 'Past' }).click();
  await page.getByRole('link', { name: 'Player List' }).click();
  await expect(page.getByRole('heading', { name: 'Team members for Team "Bogus' })).toBeVisible();


  await page.getByRole('link', { name: 'Fangzauner Schneebrunzer (ÖÄ' }).click();
  await page.locator('#bits-c58').click();
  await page.getByRole('textbox', { name: 'Title' }).click();
  await page.getByRole('textbox', { name: 'Title' }).fill('UI-Test-Announcement');
  await page.getByRole('textbox', { name: 'Announcement Text' }).click();
  await page.getByRole('textbox', { name: 'Announcement Text' }).fill('this is testing data. beep bop.');
  await page.getByRole('radio', { name: 'info' }).check();
  await page.getByRole('button', { name: 'Submit' }).click();
  await page.getByRole('article').filter({ hasText: 'UI-Test-Announcement Info' }).click();
  await page.getByRole('link', { name: 'Read more' }).click();
  await page.getByText('Comment', { exact: true }).click();
  await page.getByRole('textbox', { name: 'Comment' }).click();
  await page.getByRole('textbox', { name: 'Comment' }).fill('This is a test comment.');
  await page.getByRole('button', { name: 'Add comment' }).click();
  await page.getByRole('button', { name: 'edit comment text' }).click();
  await page.locator('[data-testid="edit-comment-input"]').click();
  await page.locator('#bits-c112').click();
  await page.getByRole('button', { name: 'Confirm' }).click();
  await page.getByRole('link', { name: 'Bogus Team (ÖÄZZ)' }).click();
  await page.getByRole('button', { name: 'Create Single Event' }).click();
  await page.getByRole('textbox', { name: 'Title' }).click();
  await page.getByRole('textbox', { name: 'Title' }).fill('Test Event Playwright');
  await page.getByRole('textbox', { name: 'Start' }).click();
  await page.getByRole('textbox', { name: 'Description' }).click();
  await page.getByRole('textbox', { name: 'Description' }).fill('test desc');
  await page.locator('[id="radio-group:c193"] label').filter({ hasText: 'Other' }).click();
  await page.getByRole('button', { name: 'Submit' }).selectOption('m0o1v55quk1uj88');
  await page.getByLabel('Uniform Set').click();
  await page.getByRole('link', { name: 'Event Test Event Playwright' }).click();
  await page.getByRole('textbox', { name: 'Comment' }).click();
  await page.getByRole('textbox', { name: 'Comment' }).fill('event comment');
  await page.getByRole('button', { name: 'Add comment' }).click();
  await page.getByText('event comment').click();
  await page.getByRole('link', { name: 'Event Test Event Playwright' }).click();
  await page.getByRole('button', { name: 'Delete Event' }).click();
  await page.getByRole('button', { name: 'Confirm' }).click();
  await page.getByRole('button', { name: 'Submit' }).click();
  await page.locator('[data-testid="edit-comment-input"]').fill('This is an edited test comment.');
  await page.getByRole('main').getByRole('listitem').getByRole('button', { name: 'Add comment' }).click();
  await page.getByText('This is an edited test').click();
  await page.getByRole('link', { name: 'Fangzauner Schneebrunzer (ÖÄ' }).click();
  await expect(page.getByRole('main').getByRole('listitem').locator('footer div').filter({ hasText: 'Number of Comments: 1 Read' }).locator('svg')).toBeVisible();
  await page.locator('#bits-c111').click();
  await page.getByRole('textbox', { name: 'Announcement Text' }).click();
  await page.getByRole('textbox', { name: 'Announcement Text' }).fill('this is testing data. beep bop. Edited.');
  await page.getByRole('button', { name: 'Submit' }).click();
});